import "backends.pkl"

class TfVarsRenderer extends ValueRenderer {
    pretty: Boolean = false
    function renderDocument(value: Any): String = renderValue(value)
    function renderValue(value: Any): String =
        if (value is String)
            "\"" + value + "\""
        else if (value is Int || value is Float)
            value.toString()
        else if (value is List)
            "[" + value.map((el) -> renderValue(el)).join(", ") + "]"
        else if (value is Map)
            "{" + value.entries.map((el) -> el.key + " = " + renderValue(el.value)).join(", ") + "}"
        else if (value is Boolean)
            if (value) "true" else "false"
        else if (value is Dynamic)
            renderDynamic(value)
        else if (value is Object)
            renderDynamic((value as Object).toDynamic())
        else
            "ERROR - don't know how to render: " + value
    function renderDynamic(object: Dynamic): String =
        let (maxKeyLength = object.toMap().keys.map((el) -> el.length).max)
        object.toMap().entries.map((el) -> el.key + "\(" ".repeat(if (pretty) maxKeyLength - el.key.length else 0)) = " + renderValue(el.value)).join("\n")
}